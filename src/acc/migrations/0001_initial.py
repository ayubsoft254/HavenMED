# Generated by Django 5.2.4 on 2025-07-07 20:24

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('user_type', models.CharField(choices=[('patient', 'Patient'), ('healthcare_professional', 'Healthcare Professional'), ('clinic', 'Clinic'), ('hospital', 'Hospital')], max_length=25)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='HealthcareProfessionalProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization', models.CharField(choices=[('general_practice', 'General Practice'), ('cardiology', 'Cardiology'), ('dermatology', 'Dermatology'), ('pediatrics', 'Pediatrics'), ('psychiatry', 'Psychiatry'), ('surgery', 'Surgery'), ('gynecology', 'Gynecology'), ('orthopedics', 'Orthopedics'), ('neurology', 'Neurology'), ('oncology', 'Oncology'), ('other', 'Other')], max_length=50)),
                ('years_of_experience', models.PositiveIntegerField()),
                ('kmpdu_license_number', models.CharField(max_length=50, unique=True)),
                ('national_id', models.ImageField(upload_to='documents/healthcare_professionals/ids/')),
                ('kmpdu_license', models.ImageField(upload_to='documents/healthcare_professionals/licenses/')),
                ('bio', models.TextField(blank=True)),
                ('consultation_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('available_for_home_visits', models.BooleanField(default=False)),
                ('available_for_virtual_consultations', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='healthcare_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InstitutionProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution_type', models.CharField(choices=[('clinic', 'Clinic'), ('hospital', 'Hospital')], max_length=10)),
                ('institution_name', models.CharField(max_length=200)),
                ('registration_number', models.CharField(max_length=100, unique=True)),
                ('medical_license', models.ImageField(upload_to='documents/institutions/licenses/')),
                ('physical_address', models.TextField()),
                ('postal_address', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('services_offered', models.TextField(help_text='List the services your institution offers')),
                ('operating_hours', models.TextField(help_text='Operating hours and days')),
                ('emergency_services', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='institution_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PatientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=15)),
                ('medical_history', models.TextField(blank=True)),
                ('allergies', models.TextField(blank=True)),
                ('address', models.TextField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patient_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
